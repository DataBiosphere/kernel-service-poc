name: GCR Push

on:
  push:
    branches:
    - zloery-dev
env:
  SERVICE_NAME: workspace-test
  GOOGLE_PROJECT: terra-kernel-k8s
  GKE_CLUSTER: terra-kernel-k8s
  VAULT_PATH_GCR: secret/dsde/terra/kernel/test
  VAULT_ADDR: https://clotho.broadinstitute.org:8200
jobs:
  build-deploy-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current code
      uses: actions/checkout@v2
    - name: Pull Vault image
      run: docker pull vault:1.1.0
    # Currently, there's no way to add capabilities to Docker actions on Git, and Vault needs IPC_LOCK to run.
    - name: Get Vault token
      id: vault-token-step
      run: |
        VAULT_TOKEN=$(docker run --rm --cap-add IPC_LOCK \
          -e "VAULT_ADDR=${VAULT_ADDR}" \
          vault:1.1.0 \
          vault write -field token \
            auth/approle/login role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }} \
            secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }})
        echo ::set-output name=vault-token::$VAULT_TOKEN
        echo ::add-mask::$VAULT_TOKEN
    - name: Get Vault secrets
      id: vault-secret-step
      run: |
        GCR_EMAIL=$(docker run --rm --cap-add IPC_LOCK \
          -e "VAULT_TOKEN=${{ steps.vault-token-step.outputs.vault-token }}" \
          -e "VAULT_ADDR=${VAULT_ADDR}" \
          vault:1.1.0 \
          vault read -field ci-gcr-sa-email ${VAULT_PATH_GCR})
        GCR_KEY=$(docker run --rm --cap-add IPC_LOCK \
          -e "VAULT_TOKEN=${{ steps.vault-token-step.outputs.vault-token }}" \
          -e "VAULT_ADDR=${VAULT_ADDR}" \
          vault:1.1.0 \
          vault read -field ci-gcr-sa-key ${VAULT_PATH_GCR})
        echo ::set-output name=gcr-email::$GCR_EMAIL
        echo ::add-mask::$GCR_EMAIL
        echo ::set-output name=gcr-key::$GCR_KEY
        echo ::add-mask::$GCR_KEY
    - name: Auth to GCR
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ steps.vault-secret-step.outputs.gcr-email }}
        service_account_key: ${{ steps.vault-secret-step.outputs.gcr-key }}
    - name: Explicitly auth Docker for GCR
      run: gcloud auth configure-docker --quiet
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build and push GCR image using Jib
      run: "./gradlew jib --image=gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ github.sha }}"
    - name: Install kustomize
      env:
        KUSTOMIZE_VERSION: 2.1.0
      run: |
        curl -L -o ./config/kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64
        chmod +x ./config/kustomize
        ./config/kustomize version
    - name: Update dev deployment to use latest image
      run: |
        cd config
        ./kustomize edit set image gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:0.0.0=gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ github.sha }}
    - name: Deploy service directly to Dev namepsace
      run: |
        gcloud container clusters get-credentials ${GKE_CLUSTER} \
                  --zone us-central1-a --project ${GOOGLE_PROJECT}
        kubectl kustomize ./config | kubectl apply -f -